import random

n = 20  # Кол-во элементов списка
data = []
for i in range(n):
    data.append(random.randint(1, 100))
print(f'No sorted: {data}')  # Изначальный список

for i in range(n):
    bool_flag = True  # Флаг сортировки
    for j in range(n - 1):
        if data[j] > data[j + 1]:  # Пузырьковая сортировка слева направо
            data[j], data[j + 1] = data[j + 1], data[j]
            bool_flag = False
        if data[n - j - 1] < data[n - j - 2]:  # Пузырьковая сортировка справа налево
            data[n - j - 1], data[n - j - 2] = data[n - j - 2], data[n - j - 1]
            bool_flag = False
    print(f'Processing: {data}, {bool_flag}')  # Проверка строк и состояния
    if bool_flag is True:  # Прерывание цикла при обнаружении флага сортировки True
        break

print(f'Sorted: {data}')  # Финишный список

  # В данном коде приведен пример пузырьковой сортировки в обе стороны, что сокращает время сортировки вдвое.
  # Выполнение всего кода:
  # Импорт модуля рандом
  # Создание переменной n отвечающей за количество элементов в списке - генерируемом ниже, методом randint
  # Цикл, проходящий по каждому элементу списка, с помощью оператора if проводящий проверку каждого элемента с соседним,
  # в данном случае - в обе стороны и меняющий их местами, в случае соблюдения условий.